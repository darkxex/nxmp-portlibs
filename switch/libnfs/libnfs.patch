diff --git a/include/libnfs-private.h b/include/libnfs-private.h
index c2dbfdb..5ea5609 100644
--- a/include/libnfs-private.h
+++ b/include/libnfs-private.h
@@ -222,9 +222,7 @@ void nfs_set_error(struct nfs_context *nfs, char *error_string, ...)
 #else        
 #define RPC_LOG(rpc, level, format, ...) \
 	do { \
-		if (level <= rpc->debug) { \
-			fprintf(stderr, "libnfs:%d " format "\n", level, ## __VA_ARGS__); \
-		} \
+		printf("libnfs:%d " format "\n", level, ## __VA_ARGS__); \
 	} while (0)
 #endif
 
diff --git a/lib/init.c b/lib/init.c
index bef4633..10881fe 100644
--- a/lib/init.c
+++ b/lib/init.c
@@ -97,7 +97,7 @@ struct rpc_context *rpc_init_context(void)
 	rpc->fd = -1;
 	rpc->tcp_syncnt = RPC_PARAM_UNDEFINED;
 	rpc->pagecache_ttl = NFS_PAGECACHE_DEFAULT_TTL;
-#if defined(WIN32) || defined(ANDROID) || defined(PS3_PPU)
+#if defined(WIN32) || defined(ANDROID) || defined(PS3_PPU) || defined(__SWITCH__)
 	rpc->uid = 65534;
 	rpc->gid = 65534;
 #else
@@ -273,6 +273,7 @@ void rpc_set_error(struct rpc_context *rpc, const char *error_string, ...)
 	vsnprintf(rpc->error_string, 1024, error_string, ap);
         va_end(ap);
 
+	printf("error: %s\n", rpc->error_string);
 	RPC_LOG(rpc, 1, "error: %s", rpc->error_string);
 
 	if (old_error_string != NULL) {
diff --git a/lib/libnfs-zdr.c b/lib/libnfs-zdr.c
index 1896851..65e9628 100644
--- a/lib/libnfs-zdr.c
+++ b/lib/libnfs-zdr.c
@@ -599,7 +599,7 @@ struct AUTH *libnfs_authunix_create(const char *host, uint32_t uid, uint32_t gid
 
 struct AUTH *libnfs_authunix_create_default(void)
 {
-#if defined(WIN32) || defined(PS3_PPU)
+#if defined(WIN32) || defined(PS3_PPU) || defined(__SWITCH__)
 	return libnfs_authunix_create("libnfs", 65534, 65534, 0, NULL);
 #else
 	return libnfs_authunix_create("libnfs", getuid(), getgid(), 0, NULL);
diff --git a/lib/libnfs.c b/lib/libnfs.c
index 4ed3b1d..fd41301 100755
--- a/lib/libnfs.c
+++ b/lib/libnfs.c
@@ -42,6 +42,7 @@
 #include <win32/win32_compat.h>
 #endif
 
+#include <time.h>
 #ifdef HAVE_UTIME_H
 #include <utime.h>
 #endif
@@ -78,6 +79,7 @@
 #include <sys/time.h>
 #endif
 
+
 #include <errno.h>
 #include <stdarg.h>
 #include <stdlib.h>
diff --git a/lib/nfs_v3.c b/lib/nfs_v3.c
index a668c11..6886fdc 100644
--- a/lib/nfs_v3.c
+++ b/lib/nfs_v3.c
@@ -26,6 +26,9 @@
 #include "config.h"
 #endif
 
+#define major(a) 0
+#define minor(a) 0
+
 #ifdef AROS
 #include "aros_compat.h"
 #endif
@@ -48,6 +51,7 @@
 #define PRIu64 "llu"
 #endif
 
+#include <time.h>
 #ifdef HAVE_UTIME_H
 #include <utime.h>
 #endif
@@ -101,6 +105,8 @@
 #include "libnfs-raw-mount.h"
 #include "libnfs-private.h"
 
+#define sockaddr_in6 sockaddr_in
+
 static dev_t
 specdata3_to_rdev(struct specdata3 *rdev)
 {
diff --git a/lib/nfs_v4.c b/lib/nfs_v4.c
index ee740eb..c84ccc8 100644
--- a/lib/nfs_v4.c
+++ b/lib/nfs_v4.c
@@ -22,6 +22,9 @@
 #define _GNU_SOURCE
 #endif
 
+#define major(a) 0
+#define minor(a) 0
+
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
@@ -48,6 +51,8 @@
 #define PRIu64 "llu"
 #endif
 
+#include <time.h>
+
 #ifdef HAVE_UTIME_H
 #include <utime.h>
 #endif
@@ -84,6 +89,7 @@
 #include <sys/sysmacros.h>
 #endif
 
+#undef HAVE_GETPWNAM
 #ifdef HAVE_GETPWNAM
 #include <pwd.h>
 #endif
@@ -106,6 +112,8 @@
 #include "libnfs-raw-nfs4.h"
 #include "libnfs-private.h"
 
+#include <arpa/inet.h>
+
 #ifndef discard_const
 #define discard_const(ptr) ((void *)((intptr_t)(ptr)))
 #endif
@@ -429,7 +437,7 @@ nfs_get_ugid(struct nfs_context *nfs, const char *buf, int slen, int is_user)
                         ugid *= 10;
                         ugid += *buf - '0';
                 } else {
-#ifdef HAVE_GETPWNAM
+#if !defined(__SWITCH__)
                         struct passwd *pwd = getpwnam(name);
                         if (pwd) {
                                 if (is_user) {
diff --git a/lib/pdu.c b/lib/pdu.c
index 6fa7552..fa5b7d3 100644
--- a/lib/pdu.c
+++ b/lib/pdu.c
@@ -47,6 +47,8 @@
 #include <strings.h>
 #endif
 
+#include <arpa/inet.h>
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
diff --git a/lib/socket.c b/lib/socket.c
index df54417..bf36c05 100644
--- a/lib/socket.c
+++ b/lib/socket.c
@@ -75,6 +75,9 @@
 #include <sys/sockio.h>
 #endif
 
+#include <arpa/inet.h>
+#define sockaddr_in6 sockaddr_in
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <assert.h>
@@ -89,6 +92,9 @@
 #include "libnfs-private.h"
 #include "slist.h"
 
+#define sockaddr_in6 sockaddr_in
+#define IPPORT_RESERVED   1024
+
 #ifdef WIN32
 //has to be included after stdlib!!
 #include "win32_errnowrapper.h"
@@ -166,7 +172,7 @@ set_tcp_sockopt(int sockfd, int optname, int value)
 {
 	int level;
 
-	#if defined(__FreeBSD__) || defined(__sun) || (defined(__APPLE__) && defined(__MACH__))
+	#if defined(__FreeBSD__) || defined(__sun) || defined(__SWITCH__) || (defined(__APPLE__) && defined(__MACH__))
 	struct protoent *buf;
 
 	if ((buf = getprotobyname("tcp")) != NULL)
@@ -602,6 +608,7 @@ rpc_connect_sockaddr_async(struct rpc_context *rpc)
 			rpc_set_error (rpc, "Failed to bind to interface");
 			return -1;
 		}
+		printf("Connected to socket %d\n",rpc->fd);
 
 #ifdef HAVE_NETINET_TCP_H
 		if (rpc->tcp_syncnt != RPC_PARAM_UNDEFINED) {
@@ -634,7 +641,7 @@ rpc_connect_sockaddr_async(struct rpc_context *rpc)
 	}
 
 	if (rpc->old_fd) {
-#if !defined(WIN32) && !defined(PS3_PPU) && !defined(PS2_EE)
+#if !defined(WIN32) && !defined(PS3_PPU) && !defined(PS2_EE) && !defined(__SWITCH__)
 		if (dup2(rpc->fd, rpc->old_fd) == -1) {
 			return -1;
 		}
@@ -700,7 +707,7 @@ rpc_connect_sockaddr_async(struct rpc_context *rpc)
                                                 sizeof(struct sockaddr_in);
 #endif
 					break;
-#if !defined(PS3_PPU) && !defined(PS2_EE)
+#if !defined(PS3_PPU) && !defined(PS2_EE) && !defined(__SWITCH__)
 				case AF_INET6:
 					sin6->sin6_port = port;
 					sin6->sin6_family = AF_INET6;
@@ -714,6 +721,7 @@ rpc_connect_sockaddr_async(struct rpc_context *rpc)
 
 				rc = bind(rpc->fd, (struct sockaddr *)&ss,
                                           socksize);
+				printf("Bind Socket %d rc %d\n",rpc->fd,rc);									
 #if !defined(WIN32)
 				/* we got EACCES, so don't try again */
 				if (rc != 0 && errno == EACCES)
@@ -758,7 +766,7 @@ rpc_set_sockaddr(struct rpc_context *rpc, const char *server, int port)
                         sizeof(struct sockaddr_in);
 #endif
 		break;
-#if !defined(PS3_PPU) && !defined(PS2_EE)
+#if !defined(PS3_PPU) && !defined(PS2_EE) && !defined(__SWITCH__)
 	case AF_INET6:
 		((struct sockaddr_in6 *)&rpc->s)->sin6_family = ai->ai_family;
 		((struct sockaddr_in6 *)&rpc->s)->sin6_port = htons(port);
